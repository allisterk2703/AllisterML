TARGET:
  PROBLEM_TYPE: regression # regression / classification
  CLASSIFICATION_TYPE: null # null / binary / multiclass
  NAME: Price # as it appears in the original dataset
  ORDER: [] # ["value1", "value2", "value3", ...]

COLUMNS:
  RENAME: {}
  DROP: []
  DROP_AFTER_TRANSFORMATIONS: []

CLEANING:
  REPLACE_BY_NAN: ["?", "NA", "n/a"]
  REPLACE_MAP: {} # remplacements globaux (valeur->valeur), pas par colonne
  REPLACE_IN_SPECIFIC_COLUMNS:
    num-of-cylinders:
      three: 3
      four: 4
      five: 5
      six: 6
      eight: 8
      twelve: 12
    num-of-doors:
      two: 2
      four: 4
  TYPE_CONVERSION:
    num-of-doors: int
    normalized-losses: int
    price: int
  IMPUTATION:
    normalized-losses: mean
    num-of-doors: mode
  OUTLIERS: {}

ENCODING:
  ORDINAL: {}

IMBALANCE:
  STRATEGY:

DIMENSIONALITY_REDUCTION:
  STRATEGY:
  K_BEST_FEATURES:
  PCA_COMPONENTS:
  TSVD_COMPONENTS:

TRAINING:
  MODELS:
    REGRESSION:
      XGBREGRESSOR: 1
      LGBMREGRESSOR: 1
      RANDOMFORESTREGRESSOR: 1
      LINEARREGRESSION: 1
      RIDGE: 0
      LASSO: 0
      SVR: 1
      DECISIONTREEREGRESSOR: 0
    CLASSIFICATION:
      XGBCLASSIFIER: 1
      LOGISTICREGRESSION: 1
      LGBMCLASSIFIER: 0
      CATBOOSTCLASSIFIER: 1
      RANDOMFORESTCLASSIFIER: 0
      SVC: 0
      GRADIENTBOOSTINGCLASSIFIER: 0
      KNEIGHBORSCLASSIFIER: 0
      DECISIONTREECLASSIFIER: 0
      NAIVEBAYESCLASSIFIER: 0
  GRIDSEARCH: True
  PARAM_GRIDS:
    REGRESSION:
      XGBREGRESSOR:
        n_estimators: [100, 200]
        learning_rate: [0.01, 0.1]
        max_depth: [3, 6]
      LGBMREGRESSOR:
        n_estimators: [100, 200]
        learning_rate: [0.01, 0.1]
        num_leaves: [31, 63]
      RANDOMFORESTREGRESSOR:
        n_estimators: [50, 100]
        max_depth: [10, 20]
        min_samples_split: [2, 5]
      LINEARREGRESSION:
        fit_intercept: [true, false]
      SVR:
        C: [0.1, 1, 10]
        kernel: ["linear", "rbf"]
    CLASSIFICATION:
      XGBCLASSIFIER:
        n_estimators: [100, 200]
        learning_rate: [0.01, 0.1]
        max_depth: [3, 6]
      LOGISTICREGRESSION:
        C: [0.1, 1, 10]
        penalty: ["l2"]
        solver: ["lbfgs"]
      CATBOOSTCLASSIFIER:
        iterations: [100, 200]
        depth: [4, 6]
        learning_rate: [0.01, 0.1]
  CROSS_VALIDATION: True
  N_FOLDS: 5
  SAVE_RESULTS_TO_CSV: True
  LOG_IN_MLFLOW: True
